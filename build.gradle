apply plugin: 'java'
apply plugin: 'com.google.protobuf'

version = '0.1.0'

//build repositories and dependencies
repositories {
    mavenCentral()
}

dependencies {
    compile 'com.datastax.cassandra:cassandra-driver-core:3.1.0'
    compile 'com.datastax.cassandra:cassandra-driver-mapping:3.1.0'
    compile 'com.google.guava:guava:19.0'
    compile 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    compile 'com.offbytwo:docopt:0.6.0.20150202'
    compile 'io.grpc:grpc-netty:1.0.0'
    compile 'io.grpc:grpc-protobuf:1.0.0'
    compile 'io.grpc:grpc-stub:1.0.0'
}

//protobuf build definitions
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0'
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

//application tasks
task execute(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    if(project.hasProperty('mainClass')) {
        main = mainClass
    }

    if(project.hasProperty('myArgs')) {
        args(myArgs.split(','))
    }
}

//build jars
task serverJar(type: Jar) {
    manifest {
        attributes 'Implementation-title': 'BGPmon Server',
            'Implementation-version': version,
            'Main-class': 'edu.colostate.netsec.BgpmonServer'
    }
    baseName = project.name + '-server'
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}
